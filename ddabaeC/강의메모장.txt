따배씨 1강

RAM은 휘발성이라서 속도 빠름. Random Access Memory
하드는 느리다.

GPU Graphics Processing Unit
그래픽 카드 : 예전에는 그래픽 카드도 램 같이 없청 작았음 GPU는 그래픽 카드 안에 들어있는 작음 카드.

hdd 는 물리적으로 움직여야해서 속도가 느림

메인보드안에 ROM Bios 존재 
Read Only Memory 제조할때 이미 결정 시켜놈 :컴터 부팅시 필요한 부팅 프로그램이 탑제 되어 있음.
부팅프로그램
1. 하드웨어 정상여부 검사

CPU는 주기억장치와만 일을함

운영체제는 보조기억장치에 설치됨

예전에는 소프트웨어 개발자가 하드웨어(cpu,메모리,보조기억장치)별로 프로그램을 따로 만들어야함.
이부분이 매우 까다로워서 힘들었음,
그래서 만들어진게 커널!
운영체제에서 가장 중요한 부분은 하드웨어와 프로그램을 중계해주는것 , 동시에 여러가지의 프로그램을 돌리기에 하드웨어 자원을 관리하는것도 중요. 

에디슨 효과(리처드슨 효과)
열전자 방출(-)
이를 통해 진공관을 만들어냄(전자가 음극에서 양극으로 흘렀다 안흘렀다 조절함) 껏다 켰다가 0~1로 대조
진공관내
Control Grid에 음전압, 양전압 으로 가알시 껏다켯다함.

이후 트랜지스터 
-> 소형화 집적회로 (i7코어는 11억 6천만개 정도 트랜지스터)


과거 프로그래밍은 물리적으로 작성
플러그보드
앨런튜링

폰 노이만이 내장형 프로그램방식의 컴퓨터 아키텍쳐 제시
CPU <-> Memory Unit 소통 메모리에 프로그램이 들어간 형태(연산과 저장공간이 분리되고 서로가 통신을 함)
Control Unit : 제어
Arithmetic/Logic 산술 논리부

그이후로 CPU/Memory/input and output 로 개념분리하고 이들은 버스를 통해 통신
또한 이에 필요한 Control/Address/Data Bus들이 생성됨
Address bus/Data bus 분리 

캐쉬메모리 : 메모리중에 자주 사용하는 것을 캐쉬메모리에 저장시켜놓은다.
순차접근 (자기테이프) : 주소를 순차적으로 다확인
임의점근(RAM) : 어디든 접근 가능. 빠르다
메모리의 구조 : 트랜지스터와,커패시터가 하나의 셀을 이룸 이하나가 1bit가 저장이됨
 
cpu와 램이 통신 하는 방법 add,cont,data bus 
메모리는 cpu에 데이터 전송과 데이터 저장 기능만함 
control bus가 보낼건지 받을건지 정함
address가 주소값을 가짐
databus가 데이터를 전송함
c/c++는 메모리에 접근하여 코딩하기에 속도가 빠름

프로그램이 시작되는 과정
보조기억장치에 저장된 프로그램이 운영체제를 통해 동작 
주기억장치로 보조기억장치의 프로그램이 복사됨

고수준 프로그래밍언어 c cpp python 
어셈블리언어 Stack 수준의 언어  니모닉?cpu 최소단위
기계어()Machine Code 이진수

컴퓨터의 구조상 
cpu구조 산술 논리 장치 제어장치, 여러가지 레지스터
주소,프로그램,데이터,명령어,어큐뮬레이터 레지스터가 존재
레지스터는 책상과 같은 역할 워크스테이션 구조상 우리가 아는 메모리랑은 다르다 기능은 비슷

주소와 메모리

보조기억장치에서 메모리로 프로그램이 올라옴 데이터도 함께 올라옴
Compiler와 운영체제에 따라 데이터 메모리와 프로그램 메모리 공간의 위치는 다르다

0.8강의
많은 단계가 있다.
프로그램카운터 -> 메모리주소 레지스터 -> 메모리 데이터 레지스터 ->  프로그램카운터가 1개 올라감(메모리 데이터 성공시) ,명령어 레지스터 프로그램 카운터 올라가는게 조금 먼저 일어남 -> 제어장치로 들어감(decode함) -> 메모리주소레지스터의 주소10번을 메모리 데이터 레지스터로 가져옴 -> 어큐뮬레이터 -> 다시 프로그램 카운터의 다음줄 주소를 메모리주소 레지스터로 가져옴 ->반복후 어큐뮬레이터에서 이전에 받은 숫자를 넘겨주고, 최근 숫자를 다시 어큐뮬레이터로 옴겨놈 -> 이후 명렁어 3+4를 실행하여 7이되고 이를 다시 어큐뮬레이터로 옴겨줌 ->  
프로그램 카운터 : 프로그램이 실행해야할 다음번 명령어 주소를 가지고 있음(프로그램은 시작점이 필요하다 )
명렁어 레지스터 : 메모리 데이터 레지스터의 명령어를 가져옴 
메모리주소 레지스터 : 프로그램카운터의 주소를 가져옴
메모리데이터 레지스터 : 메모리주소 레지스터의 번지를 가져와 해당 데이터 가져옴

0.9 정보의 단위
샤논 엔트로피 비트
데이터를 처리하면  정보다
정보의 단위  : 비트(binary digit)
1byte = 8 bit : 메모리 주소의 기본단위

word = 16bit : CPU가 데이터를 다루는 기본단위 = 레지스터의 크기

word = 32bit : 최근에 나온 CPU는 32bit를 사용하기도함 = 해당 cpu의 레지스터의 크기

즉 word는 cpu에 다라서 달라진다.
8bit 컴퓨터/ 마인크래프트 16비트 cpu / 64bit 아이폰 사용? //OS와 CPU의 관계 중요성 즉 레지스터의 크기,CPU가 처리하는 기본단위


0.10 이진수

부호가 있는 8bit 정수 
대부분 2의 보수방식 사용(보수는 1->0으로 0->1로 가는 거라 생각)
보수 취한 후 더하기 1 그후 맨 앞 비트를 부호표시

확인법

두개를 더한후 8bit 수가 모두 0이 되면 정상 9bit가 1이 됨
-0과 0이 같다. 

스스로 가능성을 제한시키지 말아라.

1.1 C언어의 탄생





 